[{"type":"tab","id":"cf8f5afd.82628","label":"Greenhouse"},{"id":"26216cc8.a8c89c","type":"mqtt-broker","z":"cf8f5afd.82628","broker":"localhost","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willRetain":null,"willPayload":"","birthTopic":"","birthQos":"0","birthRetain":null,"birthPayload":""},{"id":"2a96dce.c5b42a4","type":"mqtt in","z":"cf8f5afd.82628","name":"Temperature","topic":"sensor/temperature","broker":"26216cc8.a8c89c","x":176.5,"y":77.5,"wires":[["c09fb8a0.75d45"]]},{"id":"c9f519d3.53edb","type":"mqtt in","z":"cf8f5afd.82628","name":"Humidity","topic":"sensor/humidity","broker":"26216cc8.a8c89c","x":166.5,"y":195.5,"wires":[["34982f4f.6590d8","620b8c4a.66dac4"]]},{"id":"cb43d8bd.99eb48","type":"mqtt in","z":"cf8f5afd.82628","name":"Luminosity","topic":"sensor/luminosity","broker":"26216cc8.a8c89c","x":164.5,"y":462.5,"wires":[["91b6923e.585fb8","e798a54d.79a6b"]]},{"id":"5e7c2e4c.b66548","type":"mqtt in","z":"cf8f5afd.82628","name":"Mode Switch","topic":"greenhouse/mode","broker":"26216cc8.a8c89c","x":323.5,"y":612.5,"wires":[["b3818c85.868ff8"]]},{"id":"76fd61a7.1c02c","type":"mqtt in","z":"cf8f5afd.82628","name":"Ventilation Switch","topic":"greenhouse/manual/ventilation","broker":"26216cc8.a8c89c","x":333.5,"y":676.5,"wires":[["b7d0acd2.bff968"]]},{"id":"d7eab7da.cb9568","type":"mqtt in","z":"cf8f5afd.82628","name":"Illumination Switch","topic":"greenhouse/manual/illumination","broker":"26216cc8.a8c89c","x":344.5,"y":739.5,"wires":[["e42ffef0.4b38c8"]]},{"id":"5a5126f6.5104d","type":"mqtt out","z":"cf8f5afd.82628","name":"Ventilation","topic":"actuator/ventilation","qos":"","retain":"","broker":"26216cc8.a8c89c","x":775.5,"y":216,"wires":[]},{"id":"76a1cc65.291c0c","type":"mqtt out","z":"cf8f5afd.82628","name":"Illumination","topic":"actuator/illumination","qos":"","retain":"","broker":"26216cc8.a8c89c","x":780.5,"y":485,"wires":[]},{"id":"34982f4f.6590d8","type":"function","z":"cf8f5afd.82628","name":"Humidity Control","func":"// Set the maximium permitted humidity for auto\n\nvar maxHumidity = 40;\n\n// Get the system mode (auto/manual)\n\nvar mode = global.get(\"mode_switch\");\n\n// Get console ventillation switch state\n\nvar vent_switch = global.get(\"ventilation_switch\");\n\n// Switch based on mode and humidity measurement\n\nif (mode == \"automatic\") {\n    if (msg.payload > maxHumidity) {\n        msg.payload = \"on\";\n        node.status({fill:\"green\",shape:\"dot\",text:\"on\"});\n    } else {\n        msg.payload =\"off\";\n        node.status({fill:\"green\",shape:\"ring\",text:\"off\"});\n    }\n} else {\n    if (vent_switch == \"on\") {\n        node.status({fill:\"red\",shape:\"dot\",text:\"on\"});\n        msg.payload = \"on\";\n    } else {\n        msg.payload =\"off\";\n        node.status({fill:\"red\",shape:\"ring\",text:\"off\"});\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":493.5,"y":216.5,"wires":[["5a5126f6.5104d"]]},{"id":"b3818c85.868ff8","type":"function","z":"cf8f5afd.82628","name":"Set Global Variable","func":"global.set(\"mode_switch\", msg.payload);\nif (msg.payload == \"automatic\") {\n    node.status({fill:\"green\",shape:\"dot\",text:\"automatic\"});\n} else {\n    node.status({fill:\"red\",shape:\"ring\",text:\"manual\"});\n}\nreturn msg;","outputs":1,"noerr":0,"x":639.5,"y":612.5,"wires":[[]]},{"id":"c09fb8a0.75d45","type":"debug","z":"cf8f5afd.82628","name":"Print Temperature","active":false,"console":"false","complete":"payload","x":792.5,"y":78,"wires":[]},{"id":"620b8c4a.66dac4","type":"debug","z":"cf8f5afd.82628","name":"Print Humidity","active":false,"console":"false","complete":"payload","x":784.5,"y":148,"wires":[]},{"id":"e798a54d.79a6b","type":"debug","z":"cf8f5afd.82628","name":"Print Luminosity","active":false,"console":"false","complete":"payload","x":790.5,"y":419,"wires":[]},{"id":"91b6923e.585fb8","type":"function","z":"cf8f5afd.82628","name":"Light Control","func":"// Set the minimum luminosity for auto\n\nvar minLuminosity = 1000;\n\n// Get the system mode (auto/manual)\n\nvar mode = global.get(\"mode_switch\");\n\n// Get console ventillation switch state\n\nvar illum_switch = global.get(\"illumination_switch\");\n\n// Switch based on mode and humidity measurement\n\nif (mode == \"automatic\") {\n    if (msg.payload < minLuminosity) {\n        msg.payload = \"on\";\n        node.status({fill:\"green\",shape:\"dot\",text:\"on\"});\n    } else {\n        msg.payload =\"off\";\n        node.status({fill:\"green\",shape:\"ring\",text:\"off\"});\n    }\n} else {\n    if (illum_switch == \"on\") {\n        msg.payload = \"on\";\n        node.status({fill:\"red\",shape:\"dot\",text:\"on\"});\n    } else {\n        msg.payload =\"off\";\n        node.status({fill:\"red\",shape:\"ring\",text:\"off\"});\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":472.5,"y":486.5,"wires":[["76a1cc65.291c0c"]]},{"id":"b7d0acd2.bff968","type":"function","z":"cf8f5afd.82628","name":"Set Global Variable","func":"global.set(\"ventilation_switch\", msg.payload);\nif (msg.payload == \"on\") {\n    node.status({fill:\"red\",shape:\"dot\",text:\"on\"});\n} else {\n    node.status({fill:\"red\",shape:\"ring\",text:\"off\"});\n}\nreturn msg;","outputs":1,"noerr":0,"x":639.5,"y":676.5,"wires":[[]]},{"id":"e42ffef0.4b38c8","type":"function","z":"cf8f5afd.82628","name":"Set Global Variable","func":"global.set(\"illumination_switch\", msg.payload);\nif (msg.payload == \"on\") {\n    node.status({fill:\"red\",shape:\"dot\",text:\"on\"});\n} else {\n    node.status({fill:\"red\",shape:\"ring\",text:\"off\"});\n}\nreturn msg;","outputs":1,"noerr":0,"x":640.5,"y":739.5,"wires":[[]]},{"id":"6a65781a.ba63f","type":"mqtt out","z":"cf8f5afd.82628","name":"Fan Speed","topic":"actuator/fan_speed","qos":"","retain":"","broker":"26216cc8.a8c89c","x":779.5,"y":321,"wires":[]},{"id":"e6a6257e.671338","type":"inject","z":"cf8f5afd.82628","name":"Set Speed","topic":"","payload":"100","payloadType":"num","repeat":"1","crontab":"","once":false,"x":166.5,"y":323.5,"wires":[["6a65781a.ba63f"]]}]